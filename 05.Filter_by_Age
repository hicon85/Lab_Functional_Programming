using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;

namespace _05.Filter_by_Age
{
    class Program
    {
        static void Main(string[] args)
        {
            Func<(string name, int age), int, bool> younger = (person, age) => person.age < age;
            Func<(string name, int age), int, bool> older = (person, age) => person.age > age;

            int n = int.Parse(Console.ReadLine());

            List<(string name, int age)> peaple = new List<(string name, int age)>();

            for (int i = 0; i < n; i++)
            {
                string[] person = Console.ReadLine()
                    .Split(", ");

                peaple.Add((person[0], int.Parse(person[1])));


            }
            string cound = Console.ReadLine();
            int filter = int.Parse(Console.ReadLine());
            string[] printFormat = Console.ReadLine()
                .Split(" ");

            switch (cound)
            {
                case "younger":
                    peaple = peaple
                        .Where(p => younger(p, filter))
                        .ToList();
                    break;

                case "older":
                    peaple = peaple
                        .Where(p => older(p, filter))
                        .ToList();
                    break;
                default:
                    break;
            }

            foreach (var person in peaple)
            {
                List<string> output = new List<string>();

                if (printFormat.Contains("name"))
                {
                    output.Add(person.name);
                }
                if (printFormat.Contains("age"))
                {
                    output.Add(person.age.ToString());
                }

                Console.WriteLine(string.Join(" - ",output));
            }
        }
    }
}
